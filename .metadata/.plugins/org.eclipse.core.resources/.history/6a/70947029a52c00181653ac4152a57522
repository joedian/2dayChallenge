package com.joedianreid.n26.services;

import java.util.concurrent.atomic.AtomicInteger;

import org.springframework.beans.factory.annotation.Autowired;

import com.joedianreid.n26.models.Transaction;


public class TransactionService {
	
	@Autowired
	private StatisticService statisticService;
	
	private AtomicInteger currentSum = new AtomicInteger(0);
	
	private Long currentTimeInMilliseconds = System.currentTimeMillis();
	
	private static Long  MAX_MILLISECONDS_HELD = 60000L;
	
	
	/**
	 * 
	 * 
	 * @param transaction
	 * @return
	 */
	public boolean addTransaction(Transaction transaction){
				
		if(transaction == null || transaction.getTimestamp() == null || 
				olderThan60Seconds(transaction.getTimestamp())){
			return false;
		}
		
		return statisticService.addToQue(transaction.getAmount());
	}
	
	/**
	 * 
	 * 
	 * @param transactionTime
	 * @return
	 */
	private boolean olderThan60Seconds(Long transactionTime){
		return transactionTime < (currentTimeInMilliseconds - MAX_MILLISECONDS_HELD);
	}

}
